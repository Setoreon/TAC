<?xml version="1.0" encoding="utf-8"?>

<!--

Purpose: This include file adds a new site definition

To enable this, rename this file so that it has a ".config" extension and 
change all the parameters to suit your own scenario

Notice how "patch:before" is used to insert the site definition BEFORE the 
existing <site name="website" ...> element 

You can use "patch:before" and "patch:after" as an attribute of an inserted 
element to specify an insertion point for the new element. Both accept an 
XPath relative to the parent node of the inserted element.

-->
<configuration xmlns:patch="http://www.sitecore.net/xmlconfig/">
    <sitecore>
        <sites>
            <site name="events" patch:before="site[@name='website']"
                  loginPage="/Sign-In"/>
        </sites>
        <settings>
            <setting name="FederatedAuthentication.Enabled">
                <patch:attribute name="value">true</patch:attribute>
            </setting>
        </settings>
        <services>
            <register serviceType="Sitecore.Abstractions.BaseAuthenticationManager, Sitecore.Kernel"
                      implementationType="Sitecore.Owin.Authentication.Security.AuthenticationManager, Sitecore.Owin.Authentication"
                      lifetime="Singleton" />
            <register serviceType="Sitecore.Abstractions.BaseTicketManager, Sitecore.Kernel"
                      implementationType="Sitecore.Owin.Authentication.Security.TicketManager, Sitecore.Owin.Authentication"
                      lifetime="Singleton" />
            <register serviceType="Sitecore.Abstractions.BasePreviewManager, Sitecore.Kernel"
                      implementationType="Sitecore.Owin.Authentication.Publishing.PreviewManager, Sitecore.Owin.Authentication"
                      lifetime="Singleton" />
            
            <register serviceType="accounts.tac.local.Repositories.IAccountRepository, accounts.tac.local"
                      implementationType="accounts.tac.local.Repositories.AccountRepository, accounts.tac.local"
                      lifetime="Singleton" />
            <register serviceType="accounts.tac.local.Services.INotificationService, accounts.tac.local"
                      implementationType="accounts.tac.local.Services.NotificationService, accounts.tac.local"
                      lifetime="Singleton" />
            <register serviceType="accounts.tac.local.Services.IAccountsSettingsService, accounts.tac.local"
                      implementationType="accounts.tac.local.Services.AccountsSettingsService, accounts.tac.local"
                      lifetime="Singleton" />
            <register serviceType="accounts.tac.local.Services.IGetRedirectUrlService, accounts.tac.local"
                      implementationType="accounts.tac.local.Services.GetRedirectUrlService, accounts.tac.local"
                      lifetime="Singleton" />
            <register serviceType="accounts.tac.local.Services.IUserProfileService, accounts.tac.local"
                      implementationType="accounts.tac.local.Services.UserProfileService, accounts.tac.local"
                      lifetime="Transient" />
            <register serviceType="accounts.tac.local.Services.IUserProfileProvider, accounts.tac.local"
                      implementationType="accounts.tac.local.Services.UserProfileProvider, accounts.tac.local"
                      lifetime="Singleton" />
            <register serviceType="accounts.tac.local.Services.IProfileSettingsService, accounts.tac.local"
                      implementationType="accounts.tac.local.Services.ProfileSettingsService, accounts.tac.local"
                      lifetime="Singleton" />
            <register serviceType="accounts.tac.local.Repositories.IFedAuthLoginButtonRepository, accounts.tac.local"
                      implementationType="accounts.tac.local.Repositories.FedAuthLoginButtonRepository, accounts.tac.local"
                      lifetime="Singleton" />
        </services>
    </sitecore>
</configuration>